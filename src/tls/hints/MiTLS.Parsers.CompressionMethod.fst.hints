[
  "òü\u0003Îð4\rñ¶²\u0006Ÿ\t–\u0017…",
  [
    [
      "MiTLS.Parsers.CompressionMethod.compressionMethod",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.eqtype",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "typing_FStar.UInt8.t"
      ],
      0,
      "c91c90778a9eb5ee4de10b7661cfe2c5"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.__proj__Unknown_compressionMethod__item___0",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "refinement_interpretation_Tm_refine_347738d49e384eed591f5865dd9238ca"
      ],
      0,
      "d68f4ad532cc30ac58b32a01efddabb4"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.string_of_compressionMethod",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "disc_equation_MiTLS.Parsers.CompressionMethod.NullCompression",
        "disc_equation_MiTLS.Parsers.CompressionMethod.Unknown_compressionMethod",
        "fuel_guarded_inversion_MiTLS.Parsers.CompressionMethod.compressionMethod",
        "projection_inverse_BoxBool_proj_0"
      ],
      0,
      "79e3630c99e48fc4d04537afcf987c9f"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.compressionMethod_enum",
      1,
      2,
      1,
      [
        "@query",
        "assumption_MiTLS.Parsers.CompressionMethod.compressionMethod__uu___haseq"
      ],
      0,
      "f57a9573fb0ad331f781472ad64d7e75"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.synth_compressionMethod",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "assumption_MiTLS.Parsers.CompressionMethod.compressionMethod__uu___haseq",
        "data_elim_LowParse.Spec.Enum.Unknown",
        "disc_equation_LowParse.Spec.Enum.Known",
        "disc_equation_LowParse.Spec.Enum.Unknown",
        "equation_LowParse.Spec.Enum.unknown_enum_repr",
        "equation_MiTLS.Parsers.CompressionMethod.compressionMethod_enum",
        "fuel_guarded_inversion_LowParse.Spec.Enum.maybe_enum_key",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_42952339d1ff6a9a240497d58590f0b2"
      ],
      0,
      "739bd855a90d1598c77c48b769cf2c6b"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.synth_compressionMethod",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "assumption_MiTLS.Parsers.CompressionMethod.compressionMethod__uu___haseq",
        "data_elim_LowParse.Spec.Enum.Unknown",
        "disc_equation_LowParse.Spec.Enum.Known",
        "disc_equation_LowParse.Spec.Enum.Unknown",
        "equation_LowParse.Spec.Enum.unknown_enum_repr",
        "equation_MiTLS.Parsers.CompressionMethod.compressionMethod_enum",
        "fuel_guarded_inversion_LowParse.Spec.Enum.maybe_enum_key",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_42952339d1ff6a9a240497d58590f0b2"
      ],
      0,
      "481181282f88069959c4139991ef2b06"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.synth_compressionMethod_inv",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "assumption_MiTLS.Parsers.CompressionMethod.compressionMethod__uu___haseq",
        "equation_MiTLS.Parsers.CompressionMethod.known_compressionMethod_repr",
        "primitive_Prims.op_BarBar", "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_7eea3daec323fb18459974fcf92975d0",
        "refinement_interpretation_Tm_refine_e2d1966ed6f4fd3dcc1df0759c50ae28"
      ],
      0,
      "7e24fa5401a1abae55e7030352033cce"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.lemma_synth_compressionMethod_inv'",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "assumption_MiTLS.Parsers.CompressionMethod.compressionMethod__uu___haseq",
        "equation_LowParse.Spec.Combinators.synth_inverse",
        "refinement_interpretation_Tm_refine_47688ec9f3018ae25a235d76538420e6",
        "token_correspondence_MiTLS.Parsers.CompressionMethod.synth_compressionMethod",
        "token_correspondence_MiTLS.Parsers.CompressionMethod.synth_compressionMethod_inv"
      ],
      0,
      "ac316f483f6b9f7a68d16c93bc620095"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.lemma_synth_compressionMethod_inj",
      1,
      2,
      1,
      [
        "@query",
        "assumption_MiTLS.Parsers.CompressionMethod.compressionMethod__uu___haseq"
      ],
      0,
      "bc5772dc5f69788c671b0a550f2aa962"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.lemma_synth_compressionMethod_inv",
      1,
      0,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "MiTLS.Parsers.CompressionMethod_pretyping_f35e4a0778feabb523d7a55e21e6aee5",
        "assumption_MiTLS.Parsers.CompressionMethod.compressionMethod__uu___haseq",
        "constructor_distinct_LowParse.Spec.Enum.Known",
        "constructor_distinct_LowParse.Spec.Enum.Unknown",
        "equality_tok_MiTLS.Parsers.CompressionMethod.NullCompression@tok",
        "equation_LowParse.Spec.Combinators.synth_inverse",
        "equation_MiTLS.Parsers.CompressionMethod.compressionMethod_enum",
        "equation_MiTLS.Parsers.CompressionMethod.synth_compressionMethod",
        "equation_MiTLS.Parsers.CompressionMethod.synth_compressionMethod_inv",
        "fuel_guarded_inversion_MiTLS.Parsers.CompressionMethod.compressionMethod",
        "inversion-interp", "projection_inverse_LowParse.Spec.Enum.Known__0",
        "projection_inverse_LowParse.Spec.Enum.Known_e",
        "projection_inverse_LowParse.Spec.Enum.Known_key",
        "projection_inverse_LowParse.Spec.Enum.Known_repr",
        "projection_inverse_LowParse.Spec.Enum.Unknown__0",
        "projection_inverse_LowParse.Spec.Enum.Unknown_e",
        "projection_inverse_LowParse.Spec.Enum.Unknown_key",
        "projection_inverse_LowParse.Spec.Enum.Unknown_repr",
        "token_correspondence_MiTLS.Parsers.CompressionMethod.synth_compressionMethod",
        "token_correspondence_MiTLS.Parsers.CompressionMethod.synth_compressionMethod_inv",
        "typing_tok_MiTLS.Parsers.CompressionMethod.NullCompression@tok"
      ],
      0,
      "c491a40fbb7716ae8ace3d9be0173def"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.parse_maybe_compressionMethod_key",
      1,
      2,
      1,
      [
        "@query",
        "assumption_MiTLS.Parsers.CompressionMethod.compressionMethod__uu___haseq"
      ],
      0,
      "e9f7064f391f0734b8703ff05172790c"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.serialize_maybe_compressionMethod_key",
      1,
      2,
      1,
      [
        "@query",
        "assumption_MiTLS.Parsers.CompressionMethod.compressionMethod__uu___haseq"
      ],
      0,
      "e746881d9b8832a3733337d9f1476182"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.compressionMethod_parser",
      1,
      2,
      1,
      [
        "@query",
        "assumption_MiTLS.Parsers.CompressionMethod.compressionMethod__uu___haseq"
      ],
      0,
      "5aa9a3350b2c09c37c50f57b5dc6d9e1"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.compressionMethod_serializer",
      1,
      2,
      1,
      [
        "@query",
        "assumption_MiTLS.Parsers.CompressionMethod.compressionMethod__uu___haseq"
      ],
      0,
      "fa5061f6386fd3cf8fbbb422d54ef8c9"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.compressionMethod_bytesize_eq",
      1,
      2,
      1,
      [
        "@query", "equation_LowParse.Spec.Base.serialize",
        "equation_MiTLS.Parsers.CompressionMethod.compressionMethod_bytesize"
      ],
      0,
      "cc7c9f1c58d5c6299a64c38a1342d46d"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.parse32_maybe_compressionMethod_key",
      1,
      2,
      1,
      [
        "@query",
        "assumption_MiTLS.Parsers.CompressionMethod.compressionMethod__uu___haseq",
        "constructor_distinct_Prims.Cons", "disc_equation_Prims.Cons",
        "equation_MiTLS.Parsers.CompressionMethod.compressionMethod_enum",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl"
      ],
      0,
      "744c6314843fff18f6c0a1db425c39f2"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.parse32_maybe_compressionMethod_key",
      2,
      2,
      1,
      [
        "@query",
        "assumption_MiTLS.Parsers.CompressionMethod.compressionMethod__uu___haseq",
        "constructor_distinct_Prims.Cons", "disc_equation_Prims.Cons",
        "equation_MiTLS.Parsers.CompressionMethod.compressionMethod_enum",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl"
      ],
      0,
      "744c6314843fff18f6c0a1db425c39f2"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.parse32_maybe_compressionMethod_key",
      3,
      2,
      1,
      [
        "@query",
        "assumption_MiTLS.Parsers.CompressionMethod.compressionMethod__uu___haseq"
      ],
      0,
      "d6c27bf3286b74410ff68d117cf1ae15"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.parse32_maybe_compressionMethod_key",
      4,
      2,
      1,
      [
        "@query",
        "assumption_MiTLS.Parsers.CompressionMethod.compressionMethod__uu___haseq"
      ],
      0,
      "d6c27bf3286b74410ff68d117cf1ae15"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.compressionMethod_parser32",
      1,
      2,
      1,
      [
        "@query",
        "assumption_MiTLS.Parsers.CompressionMethod.compressionMethod__uu___haseq"
      ],
      0,
      "ccd12b4c30daa510dc8c0d19db0e9c23"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.serialize32_maybe_compressionMethod_key",
      1,
      2,
      1,
      [
        "@query",
        "assumption_MiTLS.Parsers.CompressionMethod.compressionMethod__uu___haseq",
        "constructor_distinct_Prims.Cons", "disc_equation_Prims.Cons",
        "equation_MiTLS.Parsers.CompressionMethod.compressionMethod_enum",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl"
      ],
      0,
      "16c4fb119439e9eb6a19b28068e36d10"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.serialize32_maybe_compressionMethod_key",
      2,
      2,
      1,
      [
        "@query",
        "assumption_MiTLS.Parsers.CompressionMethod.compressionMethod__uu___haseq",
        "constructor_distinct_Prims.Cons", "disc_equation_Prims.Cons",
        "equation_MiTLS.Parsers.CompressionMethod.compressionMethod_enum",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl"
      ],
      0,
      "16c4fb119439e9eb6a19b28068e36d10"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.serialize32_maybe_compressionMethod_key",
      3,
      2,
      1,
      [
        "@query",
        "assumption_MiTLS.Parsers.CompressionMethod.compressionMethod__uu___haseq"
      ],
      0,
      "d922a71cf20bc0de7b97e193e6c9b009"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.serialize32_maybe_compressionMethod_key",
      4,
      2,
      1,
      [
        "@query",
        "assumption_MiTLS.Parsers.CompressionMethod.compressionMethod__uu___haseq"
      ],
      0,
      "d922a71cf20bc0de7b97e193e6c9b009"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.compressionMethod_serializer32",
      1,
      2,
      1,
      [
        "@query",
        "assumption_MiTLS.Parsers.CompressionMethod.compressionMethod__uu___haseq"
      ],
      0,
      "9290deeede253f696ddcfe955dec9bcd"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.compressionMethod_size32",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "3bbfe6365e3e47de9fc5f47ad7c11449"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.compressionMethod_validator",
      1,
      2,
      1,
      [
        "@query", "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_MiTLS.Parsers.CompressionMethod.compressionMethod_parser_kind",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata"
      ],
      0,
      "69728b582b9bec4e873a30eb838040e3"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.compressionMethod_jumper",
      1,
      2,
      1,
      [
        "@query", "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_MiTLS.Parsers.CompressionMethod.compressionMethod_parser_kind",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "d953838a9d5d721fcecfac31844ed343"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.read_maybe_compressionMethod_key",
      1,
      2,
      1,
      [
        "@query",
        "assumption_MiTLS.Parsers.CompressionMethod.compressionMethod__uu___haseq"
      ],
      0,
      "7a6708b855b4975df2aac1b8885d5584"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.compressionMethod_reader",
      1,
      2,
      1,
      [
        "@query",
        "assumption_MiTLS.Parsers.CompressionMethod.compressionMethod__uu___haseq"
      ],
      0,
      "20f45abd4033732197ccbb5d1d28e901"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.write_maybe_compressionMethod_key",
      1,
      2,
      1,
      [
        "@query",
        "assumption_MiTLS.Parsers.CompressionMethod.compressionMethod__uu___haseq"
      ],
      0,
      "1aff668b972dfeb94363a880895a9086"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.write_maybe_compressionMethod_key",
      2,
      2,
      1,
      [
        "@query",
        "assumption_MiTLS.Parsers.CompressionMethod.compressionMethod__uu___haseq"
      ],
      0,
      "1aff668b972dfeb94363a880895a9086"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.lserialize_maybe_compressionMethod_key",
      1,
      2,
      1,
      [
        "@query",
        "assumption_MiTLS.Parsers.CompressionMethod.compressionMethod__uu___haseq",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Int.parse_u8_kind",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind"
      ],
      0,
      "a69a53e23e5ff72974463efab79d09a0"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.compressionMethod_writer",
      1,
      2,
      1,
      [
        "@query",
        "assumption_MiTLS.Parsers.CompressionMethod.compressionMethod__uu___haseq"
      ],
      0,
      "0bc0d2f914b7fc95e633f9fdad64a750"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.compressionMethod_lserializer",
      1,
      2,
      1,
      [
        "@query", "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_MiTLS.Parsers.CompressionMethod.compressionMethod_parser_kind",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind"
      ],
      0,
      "212e69d9802d3257bb8ca38f03bb832b"
    ],
    [
      "MiTLS.Parsers.CompressionMethod.compressionMethod_bytesize_eqn",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_MiTLS.Parsers.CompressionMethod.compressionMethod_parser_kind",
        "equation_Prims.nat", "int_inversion",
        "kinding_MiTLS.Parsers.CompressionMethod.compressionMethod@tok",
        "lemma_LowParse.Spec.Base.serialize_length",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "typing_MiTLS.Parsers.CompressionMethod.compressionMethod_bytesize",
        "typing_MiTLS.Parsers.CompressionMethod.compressionMethod_parser",
        "typing_MiTLS.Parsers.CompressionMethod.compressionMethod_parser_kind",
        "typing_MiTLS.Parsers.CompressionMethod.compressionMethod_serializer"
      ],
      0,
      "13f96ad79a69507e0023703c608eaacd"
    ]
  ]
]